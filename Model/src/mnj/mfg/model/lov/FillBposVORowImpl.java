package mnj.mfg.model.lov;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 03 17:48:37 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FillBposVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BpoId {
            public Object get(FillBposVORowImpl obj) {
                return obj.getBpoId();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setBpoId((BigDecimal)value);
            }
        }
        ,
        Bpo {
            public Object get(FillBposVORowImpl obj) {
                return obj.getBpo();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setBpo((String)value);
            }
        }
        ,
        Season {
            public Object get(FillBposVORowImpl obj) {
                return obj.getSeason();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Style {
            public Object get(FillBposVORowImpl obj) {
                return obj.getStyle();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Color {
            public Object get(FillBposVORowImpl obj) {
                return obj.getColor();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        Wash {
            public Object get(FillBposVORowImpl obj) {
                return obj.getWash();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setWash((String)value);
            }
        }
        ,
        TransType {
            public Object get(FillBposVORowImpl obj) {
                return obj.getTransType();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setTransType((String)value);
            }
        }
        ,
        BpoNo {
            public Object get(FillBposVORowImpl obj) {
                return obj.getBpoNo();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setBpoNo((String)value);
            }
        }
        ,
        StnNumber {
            public Object get(FillBposVORowImpl obj) {
                return obj.getStnNumber();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setStnNumber((String)value);
            }
        }
        ,
        OrderedQty {
            public Object get(FillBposVORowImpl obj) {
                return obj.getOrderedQty();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setOrderedQty((Number)value);
            }
        }
        ,
        Stn {
            public Object get(FillBposVORowImpl obj) {
                return obj.getStn();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setStn((String)value);
            }
        }
        ,
        StyleName {
            public Object get(FillBposVORowImpl obj) {
                return obj.getStyleName();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        Flag {
            public Object get(FillBposVORowImpl obj) {
                return obj.getFlag();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        FlagNew {
            public Object get(FillBposVORowImpl obj) {
                return obj.getFlagNew();
            }

            public void put(FillBposVORowImpl obj, Object value) {
                obj.setFlagNew((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FillBposVORowImpl object);

        public abstract void put(FillBposVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BPOID = AttributesEnum.BpoId.index();
    public static final int BPO = AttributesEnum.Bpo.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int WASH = AttributesEnum.Wash.index();
    public static final int TRANSTYPE = AttributesEnum.TransType.index();
    public static final int BPONO = AttributesEnum.BpoNo.index();
    public static final int STNNUMBER = AttributesEnum.StnNumber.index();
    public static final int ORDEREDQTY = AttributesEnum.OrderedQty.index();
    public static final int STN = AttributesEnum.Stn.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int FLAGNEW = AttributesEnum.FlagNew.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FillBposVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute BpoId.
     * @return the BpoId
     */
    public BigDecimal getBpoId() {
        return (BigDecimal) getAttributeInternal(BPOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BpoId.
     * @param value value to set the  BpoId
     */
    public void setBpoId(BigDecimal value) {
        setAttributeInternal(BPOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Bpo.
     * @return the Bpo
     */
    public String getBpo() {
        return (String) getAttributeInternal(BPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Bpo.
     * @param value value to set the  Bpo
     */
    public void setBpo(String value) {
        setAttributeInternal(BPO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BpoNo.
     * @return the BpoNo
     */
    public String getBpoNo() {
        return (String) getAttributeInternal(BPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BpoNo.
     * @param value value to set the  BpoNo
     */
    public void setBpoNo(String value) {
        setAttributeInternal(BPONO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Style.
     * @return the Style
     */
    public String getStyle() {
        return (String) getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Style.
     * @param value value to set the  Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StnNumber.
     * @return the StnNumber
     */
    public String getStnNumber() {
        return (String) getAttributeInternal(STNNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StnNumber.
     * @param value value to set the  StnNumber
     */
    public void setStnNumber(String value) {
        setAttributeInternal(STNNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderedQty.
     * @return the OrderedQty
     */
    public Number getOrderedQty() {
        return (Number) getAttributeInternal(ORDEREDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderedQty.
     * @param value value to set the  OrderedQty
     */
    public void setOrderedQty(Number value) {
        setAttributeInternal(ORDEREDQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Stn.
     * @return the Stn
     */
    public String getStn() {
        return (String) getAttributeInternal(STN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Stn.
     * @param value value to set the  Stn
     */
    public void setStn(String value) {
        setAttributeInternal(STN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wash.
     * @return the Wash
     */
    public String getWash() {
        return (String) getAttributeInternal(WASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wash.
     * @param value value to set the  Wash
     */
    public void setWash(String value) {
        setAttributeInternal(WASH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransType.
     * @return the TransType
     */
    public String getTransType() {
        return (String) getAttributeInternal(TRANSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransType.
     * @param value value to set the  TransType
     */
    public void setTransType(String value) {
        setAttributeInternal(TRANSTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Season.
     * @return the Season
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Season.
     * @param value value to set the  Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String) getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StyleName.
     * @param value value to set the  StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Flag.
     * @return the Flag
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Flag.
     * @param value value to set the  Flag
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FlagNew.
     * @return the FlagNew
     */
    public String getFlagNew() {
        return (String) getAttributeInternal(FLAGNEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FlagNew.
     * @param value value to set the  FlagNew
     */
    public void setFlagNew(String value) {
        setAttributeInternal(FLAGNEW, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
