package mnj.mfg.model.lov;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 03 18:05:23 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class papulateSizeVoRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Bpo {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getBpo();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setBpo((String)value);
            }
        }
        ,
        Style {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getStyle();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        BpoId {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getBpoId();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setBpoId((Number)value);
            }
        }
        ,
        Color {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getColor();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        TransType {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getTransType();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setTransType((String)value);
            }
        }
        ,
        Inseem {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getInseem();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setInseem((String)value);
            }
        }
        ,
        SizeVal {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getSizeVal();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setSizeVal((String)value);
            }
        }
        ,
        TotalQty {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getTotalQty();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setTotalQty((Number)value);
            }
        }
        ,
        Season {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getSeason();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        IssuedQuantity {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getIssuedQuantity();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setIssuedQuantity((Number)value);
            }
        }
        ,
        BalanceQuantity {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getBalanceQuantity();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setBalanceQuantity((Number)value);
            }
        }
        ,
        Sizee {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getSizee();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setSizee((String)value);
            }
        }
        ,
        Inseme {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getInseme();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setInseme((String)value);
            }
        }
        ,
        InseamSizeConcat {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getInseamSizeConcat();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setInseamSizeConcat((String)value);
            }
        }
        ,
        ShippingInstructions {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getShippingInstructions();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setShippingInstructions((String)value);
            }
        }
        ,
        CustPoNumber {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getCustPoNumber();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setCustPoNumber((String)value);
            }
        }
        ,
        Flag {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getFlag();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        FlagSize {
            public Object get(papulateSizeVoRowImpl obj) {
                return obj.getFlagSize();
            }

            public void put(papulateSizeVoRowImpl obj, Object value) {
                obj.setFlagSize((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(papulateSizeVoRowImpl object);

        public abstract void put(papulateSizeVoRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BPO = AttributesEnum.Bpo.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int BPOID = AttributesEnum.BpoId.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int TRANSTYPE = AttributesEnum.TransType.index();
    public static final int INSEEM = AttributesEnum.Inseem.index();
    public static final int SIZEVAL = AttributesEnum.SizeVal.index();
    public static final int TOTALQTY = AttributesEnum.TotalQty.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int ISSUEDQUANTITY = AttributesEnum.IssuedQuantity.index();
    public static final int BALANCEQUANTITY = AttributesEnum.BalanceQuantity.index();
    public static final int SIZEE = AttributesEnum.Sizee.index();
    public static final int INSEME = AttributesEnum.Inseme.index();
    public static final int INSEAMSIZECONCAT = AttributesEnum.InseamSizeConcat.index();
    public static final int SHIPPINGINSTRUCTIONS = AttributesEnum.ShippingInstructions.index();
    public static final int CUSTPONUMBER = AttributesEnum.CustPoNumber.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int FLAGSIZE = AttributesEnum.FlagSize.index();

    /**
     * This is the default constructor (do not remove).
     */
    public papulateSizeVoRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Bpo.
     * @return the Bpo
     */
    public String getBpo() {
        return (String) getAttributeInternal(BPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Bpo.
     * @param value value to set the  Bpo
     */
    public void setBpo(String value) {
        setAttributeInternal(BPO, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TotalQty.
     * @return the TotalQty
     */
    public Number getTotalQty() {
        return (Number) getAttributeInternal(TOTALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalQty.
     * @param value value to set the  TotalQty
     */
    public void setTotalQty(Number value) {
        setAttributeInternal(TOTALQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Season.
     * @return the Season
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Season.
     * @param value value to set the  Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssuedQuantity.
     * @return the IssuedQuantity
     */
    public Number getIssuedQuantity() {
        return (Number) getAttributeInternal(ISSUEDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssuedQuantity.
     * @param value value to set the  IssuedQuantity
     */
    public void setIssuedQuantity(Number value) {
        setAttributeInternal(ISSUEDQUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BalanceQuantity.
     * @return the BalanceQuantity
     */
    public Number getBalanceQuantity() {
        return (Number) getAttributeInternal(BALANCEQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BalanceQuantity.
     * @param value value to set the  BalanceQuantity
     */
    public void setBalanceQuantity(Number value) {
        setAttributeInternal(BALANCEQUANTITY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SizeVal.
     * @return the SizeVal
     */
    public String getSizeVal() {
        return (String) getAttributeInternal(SIZEVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeVal.
     * @param value value to set the  SizeVal
     */
    public void setSizeVal(String value) {
        setAttributeInternal(SIZEVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Inseem.
     * @return the Inseem
     */
    public String getInseem() {
        return (String) getAttributeInternal(INSEEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Inseem.
     * @param value value to set the  Inseem
     */
    public void setInseem(String value) {
        setAttributeInternal(INSEEM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Style.
     * @return the Style
     */
    public String getStyle() {
        return (String) getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Style.
     * @param value value to set the  Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute BpoId.
     * @return the BpoId
     */
    public Number getBpoId() {
        return (Number) getAttributeInternal(BPOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BpoId.
     * @param value value to set the  BpoId
     */
    public void setBpoId(Number value) {
        setAttributeInternal(BPOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransType.
     * @return the TransType
     */
    public String getTransType() {
        return (String) getAttributeInternal(TRANSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransType.
     * @param value value to set the  TransType
     */
    public void setTransType(String value) {
        setAttributeInternal(TRANSTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Sizee.
     * @return the Sizee
     */
    public String getSizee() {
        return (String) getAttributeInternal(SIZEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Sizee.
     * @param value value to set the  Sizee
     */
    public void setSizee(String value) {
        setAttributeInternal(SIZEE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Inseme.
     * @return the Inseme
     */
    public String getInseme() {
        return (String) getAttributeInternal(INSEME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Inseme.
     * @param value value to set the  Inseme
     */
    public void setInseme(String value) {
        setAttributeInternal(INSEME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InseamSizeConcat.
     * @return the InseamSizeConcat
     */
    public String getInseamSizeConcat() {
        return (String) getAttributeInternal(INSEAMSIZECONCAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InseamSizeConcat.
     * @param value value to set the  InseamSizeConcat
     */
    public void setInseamSizeConcat(String value) {
        setAttributeInternal(INSEAMSIZECONCAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShippingInstructions.
     * @return the ShippingInstructions
     */
    public String getShippingInstructions() {
        return (String) getAttributeInternal(SHIPPINGINSTRUCTIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShippingInstructions.
     * @param value value to set the  ShippingInstructions
     */
    public void setShippingInstructions(String value) {
        setAttributeInternal(SHIPPINGINSTRUCTIONS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustPoNumber.
     * @return the CustPoNumber
     */
    public String getCustPoNumber() {
        return (String) getAttributeInternal(CUSTPONUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustPoNumber.
     * @param value value to set the  CustPoNumber
     */
    public void setCustPoNumber(String value) {
        setAttributeInternal(CUSTPONUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Flag.
     * @return the Flag
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Flag.
     * @param value value to set the  Flag
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FlagSize.
     * @return the FlagSize
     */
    public String getFlagSize() {
        return (String) getAttributeInternal(FLAGSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FlagSize.
     * @param value value to set the  FlagSize
     */
    public void setFlagSize(String value) {
        setAttributeInternal(FLAGSIZE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
